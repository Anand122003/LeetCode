/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        double sum,m;
        vector<double> ans;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            sum=0;
            int n=q.size();
            m=n;
            while(n!=0){
                TreeNode*temp = q.front();
                sum=sum+temp->val;
                if(temp->left !=NULL){
                   q.push(temp->left);
                }
                if(temp->right!=NULL){
                   q.push(temp->right );
                }
                q.pop();
                n--;
            }
            ans.push_back(double(sum/m));
        }
        return ans;
        
    }
};
