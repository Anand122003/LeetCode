// ITERATIVE APPROACH

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* current = head;
        ListNode* previous = NULL;
        while(head!=NULL){
            head = current ->next;
            current->next = previous;
            previous = current;
            current = head;
        }
        // head=NULL hoga , current = NULL hoga is point pe 
        return previous;
    }
};




// Recursive Approach

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
    // recursive approach
       
      if(head==NULL || head->next==NULL){
          return head;
      }
      ListNode* newhead = reverseList(head->next);
      head->next->next=head;
       head->next=NULL;
      return newhead;
      
    }
};
