/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        bool flag=false;
        queue<TreeNode*>q;
        q.push(root);

        while(!q.empty()){
            int count=0;
            int n=q.size();
            while(n--){
                TreeNode* temp=q.front();
                q.pop();
                if(temp->left){
                    q.push(temp->left);
                }
                if(temp->right){
                    q.push(temp->right);
                    
                }
                if(temp->left &&(temp->left->val==x || temp->left->val==y)){
                    ++count;
                }
                else if(temp->right &&(temp->right->val==x || temp->right->val==y)){
                    ++count;
                }
    
            }
            if(count==2){
                return true;
            }
        }
        return false;
    }
};
