/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int gcd(int a,int b){
        if(a==0){
            return b;
        }
        else if(b==0){
            return a;
        }
        if(a>b){
            a=a%b;
        }
        else{
            b=b%a;
        }
        return gcd(a,b);
    }
    ListNode* insertGreatestCommonDivisors(ListNode* head) {
        ListNode* prev=head;
        ListNode* temp=prev->next;
        if(temp==NULL){
            return head;
        }
        while(temp!=NULL){
            int value=gcd(prev->val,temp->val);
            ListNode* newNode=new ListNode(value);
            // newNode->val=gcd(prev->val,temp->val);
            prev->next=newNode;
            newNode->next=temp;
            prev=temp;
            temp=temp->next;
        }
        return head;
    }
};
