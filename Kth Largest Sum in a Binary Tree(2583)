class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        long long sum;
        vector<long long> ans;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            sum=0;
            int n=q.size();
            while(n!=0){
                TreeNode* temp=q.front();
                sum=sum+temp->val;
                if(temp->left!=NULL){
                    q.push(temp->left);
                }
                if(temp->right!=NULL){
                    q.push(temp->right);
                }
                q.pop();
                n--;
            }
            ans.push_back(sum);
        }
        sort(ans.begin(),ans.end(),greater<long long>());
        if(ans.size()<k){
            return -1;
        }
        return ans[k-1];
    }
};
