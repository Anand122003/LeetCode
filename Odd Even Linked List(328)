/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        int i=0;
        ListNode* temp=head;
        ListNode* temp1=head;
        if(temp==NULL || temp->next==NULL || temp->next->next==NULL){
            return head;
        }
        while(temp1->next!=NULL){
            temp1=temp1->next;
        }
        ListNode* current=temp1;
        while(temp!=temp1){
            if(temp->next==temp1){
                i=1;
                break;
            }
            current->next=temp->next;
            temp->next=temp->next->next;
            current=current->next;
            current->next=NULL;
            temp=temp->next;
        }
       
        while(i){
            current->next=temp->next;
            temp->next=temp->next->next;
            current=current->next;
            current->next=NULL;
            temp=temp->next;
            i--;
        }
        return head;
        
    }
};
