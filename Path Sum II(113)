/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> check(TreeNode* root,int targetSum,vector<vector<int>> &ans,vector<int> subAns,int value){
        if(root==NULL){
            return ans;
        }
        subAns.push_back(root->val);
        value=value+root->val;
        if(root->left==NULL && root->right==NULL){
            if(value==targetSum){
              ans.push_back(subAns);
            //   subAns.clear();
            }
            // else{
            //     subAns.pop_back();
            // }
        }
        check(root->left,targetSum,ans,subAns,value);
        check(root->right,targetSum,ans,subAns,value);
        return ans;
    }

    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>ans;
        vector<int> subAns;
        return  check(root,targetSum,ans,subAns,0);
    }
};
